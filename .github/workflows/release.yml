name: Release Build

on:
  push:
    branches:
      - releases

jobs:
  server-release:
    name: Server Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25"
          cache-dependency-path: excalidraw-server/go.sum

      - name: 🔍 Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: excalidraw-server

      - name: Make test script executable
        run: chmod +x tests/server/run.sh

      - name: 🧪 Run server tests
        run: tests/server/run.sh

      - name: 🔨 Build server executable
        run: |
          cd excalidraw-server
          go build -o excalidraw-server
          echo "✅ Server built successfully"

      - name: Upload server artifact
        uses: actions/upload-artifact@v4
        with:
          name: excalidraw-server
          path: excalidraw-server/excalidraw-server

  client-release:
    name: Client Release - ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux
            os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
          - platform: macos
            os: macos-latest
            rust-target: x86_64-apple-darwin
          - platform: windows
            os: windows-latest
            rust-target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: excalidraw-app/package-lock.json

      - name: Install dependencies
        run: |
          cd excalidraw-app
          npm ci

      - name: 🔍 Run ESLint
        run: |
          cd excalidraw-app
          npm run lint

      - name: Make test script executable
        if: matrix.platform != 'windows'
        run: chmod +x tests/client/run.sh

      - name: 🧪 Run client tests (Unix)
        if: matrix.platform != 'windows'
        run: tests/client/run.sh

      - name: 🧪 Run client tests (Windows)
        if: matrix.platform == 'windows'
        run: |
          cd excalidraw-app
          npm test

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Install Tauri dependencies (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: 🔨 Build Tauri app
        run: |
          cd excalidraw-app
          npm run tauri build
          echo "✅ Tauri app built successfully for ${{ matrix.platform }}"

      - name: 🔏 Sign macOS app (ad-hoc)
        if: matrix.platform == 'macos'
        run: |
          echo "Applying ad-hoc code signature to macOS app..."
          find excalidraw-app/src-tauri/target/release/bundle/macos -name "*.app" -type d | while read app; do
            echo "Signing: $app"
            codesign --force --deep --sign - "$app" 2>/dev/null || true
          done
          echo "✅ Ad-hoc signing complete"

      - name: Upload Linux artifacts
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: excalidraw-linux
          path: |
            excalidraw-app/src-tauri/target/release/bundle/deb/*.deb
            excalidraw-app/src-tauri/target/release/bundle/appimage/*.AppImage

      - name: Upload macOS artifacts
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: excalidraw-macos
          path: |
            excalidraw-app/src-tauri/target/release/bundle/dmg/*.dmg
            excalidraw-app/src-tauri/target/release/bundle/macos/*.app

      - name: Upload Windows artifacts
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: excalidraw-windows
          path: |
            excalidraw-app/src-tauri/target/release/bundle/msi/*.msi
            excalidraw-app/src-tauri/target/release/bundle/nsis/*.exe
